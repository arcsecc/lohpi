// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Used in direct messaging
type Message struct {
	Type                 string         `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty"`
	Load                 *Load          `protobuf:"bytes,2,opt,name=load,proto3" json:"load,omitempty"`
	Sender               *Node          `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Studies              *Studies       `protobuf:"bytes,4,opt,name=studies,proto3" json:"studies,omitempty"`
	Policy               *Policy        `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	Signature            *MsgSignature  `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	GossipMessage        *GossipMessage `protobuf:"bytes,7,opt,name=gossipMessage,proto3" json:"gossipMessage,omitempty"`
	Probe                *Probe         `protobuf:"bytes,8,opt,name=probe,proto3" json:"probe,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Message) GetLoad() *Load {
	if m != nil {
		return m.Load
	}
	return nil
}

func (m *Message) GetSender() *Node {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetStudies() *Studies {
	if m != nil {
		return m.Studies
	}
	return nil
}

func (m *Message) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *Message) GetSignature() *MsgSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Message) GetGossipMessage() *GossipMessage {
	if m != nil {
		return m.GossipMessage
	}
	return nil
}

func (m *Message) GetProbe() *Probe {
	if m != nil {
		return m.Probe
	}
	return nil
}

// Message to load a node. Distributed to all entities that need it (hint hint REC)
type Load struct {
	Node                 *Node     `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	StudyName            string    `protobuf:"bytes,2,opt,name=StudyName,proto3" json:"StudyName,omitempty"`
	Minfiles             uint32    `protobuf:"varint,3,opt,name=Minfiles,proto3" json:"Minfiles,omitempty"`
	Maxfiles             uint32    `protobuf:"varint,4,opt,name=Maxfiles,proto3" json:"Maxfiles,omitempty"`
	Subjects             []string  `protobuf:"bytes,5,rep,name=subjects,proto3" json:"subjects,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Load) Reset()         { *m = Load{} }
func (m *Load) String() string { return proto.CompactTextString(m) }
func (*Load) ProtoMessage()    {}
func (*Load) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Load) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Load.Unmarshal(m, b)
}
func (m *Load) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Load.Marshal(b, m, deterministic)
}
func (m *Load) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Load.Merge(m, src)
}
func (m *Load) XXX_Size() int {
	return xxx_messageInfo_Load.Size(m)
}
func (m *Load) XXX_DiscardUnknown() {
	xxx_messageInfo_Load.DiscardUnknown(m)
}

var xxx_messageInfo_Load proto.InternalMessageInfo

func (m *Load) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Load) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

func (m *Load) GetMinfiles() uint32 {
	if m != nil {
		return m.Minfiles
	}
	return 0
}

func (m *Load) GetMaxfiles() uint32 {
	if m != nil {
		return m.Maxfiles
	}
	return 0
}

func (m *Load) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *Load) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

// Here, node is Lohpi storage nodes, policy store and mux (and compliance engine?)
type Node struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Role                 string   `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	ContactEmail         string   `protobuf:"bytes,4,opt,name=contactEmail,proto3" json:"contactEmail,omitempty"`
	Id                   []byte   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Node) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Node) GetContactEmail() string {
	if m != nil {
		return m.ContactEmail
	}
	return ""
}

func (m *Node) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type Study struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Node                 *Node     `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	RecContactEmail      string    `protobuf:"bytes,3,opt,name=rec_contact_email,json=recContactEmail,proto3" json:"rec_contact_email,omitempty"`
	Metadata             *Metadata `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Policy               *Policy   `protobuf:"bytes,5,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Study) Reset()         { *m = Study{} }
func (m *Study) String() string { return proto.CompactTextString(m) }
func (*Study) ProtoMessage()    {}
func (*Study) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Study) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Study.Unmarshal(m, b)
}
func (m *Study) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Study.Marshal(b, m, deterministic)
}
func (m *Study) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Study.Merge(m, src)
}
func (m *Study) XXX_Size() int {
	return xxx_messageInfo_Study.Size(m)
}
func (m *Study) XXX_DiscardUnknown() {
	xxx_messageInfo_Study.DiscardUnknown(m)
}

var xxx_messageInfo_Study proto.InternalMessageInfo

func (m *Study) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Study) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Study) GetRecContactEmail() string {
	if m != nil {
		return m.RecContactEmail
	}
	return ""
}

func (m *Study) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Study) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type Studies struct {
	Studies              []*Study `protobuf:"bytes,1,rep,name=studies,proto3" json:"studies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Studies) Reset()         { *m = Studies{} }
func (m *Studies) String() string { return proto.CompactTextString(m) }
func (*Studies) ProtoMessage()    {}
func (*Studies) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *Studies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Studies.Unmarshal(m, b)
}
func (m *Studies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Studies.Marshal(b, m, deterministic)
}
func (m *Studies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Studies.Merge(m, src)
}
func (m *Studies) XXX_Size() int {
	return xxx_messageInfo_Studies.Size(m)
}
func (m *Studies) XXX_DiscardUnknown() {
	xxx_messageInfo_Studies.DiscardUnknown(m)
}

var xxx_messageInfo_Studies proto.InternalMessageInfo

func (m *Studies) GetStudies() []*Study {
	if m != nil {
		return m.Studies
	}
	return nil
}

type Subject struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (m *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(m, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Metadata struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Subjects             []string `protobuf:"bytes,2,rep,name=subjects,proto3" json:"subjects,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (m *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(m, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Metadata) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

type Policy struct {
	Issuer               string   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	StudyName            string   `protobuf:"bytes,2,opt,name=studyName,proto3" json:"studyName,omitempty"`
	Filename             string   `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	Content              []byte   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *Policy) GetStudyName() string {
	if m != nil {
		return m.StudyName
	}
	return ""
}

func (m *Policy) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Policy) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type MsgSignature struct {
	R                    []byte   `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S                    []byte   `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgSignature) Reset()         { *m = MsgSignature{} }
func (m *MsgSignature) String() string { return proto.CompactTextString(m) }
func (*MsgSignature) ProtoMessage()    {}
func (*MsgSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *MsgSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgSignature.Unmarshal(m, b)
}
func (m *MsgSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgSignature.Marshal(b, m, deterministic)
}
func (m *MsgSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSignature.Merge(m, src)
}
func (m *MsgSignature) XXX_Size() int {
	return xxx_messageInfo_MsgSignature.Size(m)
}
func (m *MsgSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSignature.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSignature proto.InternalMessageInfo

func (m *MsgSignature) GetR() []byte {
	if m != nil {
		return m.R
	}
	return nil
}

func (m *MsgSignature) GetS() []byte {
	if m != nil {
		return m.S
	}
	return nil
}

type HandshakeResponse struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Id                   []byte   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeResponse) Reset()         { *m = HandshakeResponse{} }
func (m *HandshakeResponse) String() string { return proto.CompactTextString(m) }
func (*HandshakeResponse) ProtoMessage()    {}
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *HandshakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeResponse.Unmarshal(m, b)
}
func (m *HandshakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeResponse.Marshal(b, m, deterministic)
}
func (m *HandshakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeResponse.Merge(m, src)
}
func (m *HandshakeResponse) XXX_Size() int {
	return xxx_messageInfo_HandshakeResponse.Size(m)
}
func (m *HandshakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeResponse proto.InternalMessageInfo

func (m *HandshakeResponse) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *HandshakeResponse) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type GossipMessage struct {
	Sender               string               `protobuf:"bytes,1,opt,name=Sender,proto3" json:"Sender,omitempty"`
	MessageType          string               `protobuf:"bytes,2,opt,name=MessageType,proto3" json:"MessageType,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            *MsgSignature        `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	GossipMessageBody    []*GossipMessageBody `protobuf:"bytes,5,rep,name=gossipMessageBody,proto3" json:"gossipMessageBody,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GossipMessage) Reset()         { *m = GossipMessage{} }
func (m *GossipMessage) String() string { return proto.CompactTextString(m) }
func (*GossipMessage) ProtoMessage()    {}
func (*GossipMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *GossipMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GossipMessage.Unmarshal(m, b)
}
func (m *GossipMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GossipMessage.Marshal(b, m, deterministic)
}
func (m *GossipMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GossipMessage.Merge(m, src)
}
func (m *GossipMessage) XXX_Size() int {
	return xxx_messageInfo_GossipMessage.Size(m)
}
func (m *GossipMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GossipMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GossipMessage proto.InternalMessageInfo

func (m *GossipMessage) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *GossipMessage) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *GossipMessage) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *GossipMessage) GetSignature() *MsgSignature {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *GossipMessage) GetGossipMessageBody() []*GossipMessageBody {
	if m != nil {
		return m.GossipMessageBody
	}
	return nil
}

type GossipMessageBody struct {
	Object               string               `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Version              uint64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Policy               *Policy              `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GossipMessageBody) Reset()         { *m = GossipMessageBody{} }
func (m *GossipMessageBody) String() string { return proto.CompactTextString(m) }
func (*GossipMessageBody) ProtoMessage()    {}
func (*GossipMessageBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}

func (m *GossipMessageBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GossipMessageBody.Unmarshal(m, b)
}
func (m *GossipMessageBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GossipMessageBody.Marshal(b, m, deterministic)
}
func (m *GossipMessageBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GossipMessageBody.Merge(m, src)
}
func (m *GossipMessageBody) XXX_Size() int {
	return xxx_messageInfo_GossipMessageBody.Size(m)
}
func (m *GossipMessageBody) XXX_DiscardUnknown() {
	xxx_messageInfo_GossipMessageBody.DiscardUnknown(m)
}

var xxx_messageInfo_GossipMessageBody proto.InternalMessageInfo

func (m *GossipMessageBody) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *GossipMessageBody) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GossipMessageBody) GetPolicy() *Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *GossipMessageBody) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Probe struct {
	Order                uint32   `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	SessionId            []byte   `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Probe) Reset()         { *m = Probe{} }
func (m *Probe) String() string { return proto.CompactTextString(m) }
func (*Probe) ProtoMessage()    {}
func (*Probe) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{12}
}

func (m *Probe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Probe.Unmarshal(m, b)
}
func (m *Probe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Probe.Marshal(b, m, deterministic)
}
func (m *Probe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Probe.Merge(m, src)
}
func (m *Probe) XXX_Size() int {
	return xxx_messageInfo_Probe.Size(m)
}
func (m *Probe) XXX_DiscardUnknown() {
	xxx_messageInfo_Probe.DiscardUnknown(m)
}

var xxx_messageInfo_Probe proto.InternalMessageInfo

func (m *Probe) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Probe) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterType((*Load)(nil), "proto.Load")
	proto.RegisterType((*Node)(nil), "proto.Node")
	proto.RegisterType((*Study)(nil), "proto.Study")
	proto.RegisterType((*Studies)(nil), "proto.Studies")
	proto.RegisterType((*Subject)(nil), "proto.Subject")
	proto.RegisterType((*Metadata)(nil), "proto.Metadata")
	proto.RegisterType((*Policy)(nil), "proto.Policy")
	proto.RegisterType((*MsgSignature)(nil), "proto.MsgSignature")
	proto.RegisterType((*HandshakeResponse)(nil), "proto.HandshakeResponse")
	proto.RegisterType((*GossipMessage)(nil), "proto.GossipMessage")
	proto.RegisterType((*GossipMessageBody)(nil), "proto.GossipMessageBody")
	proto.RegisterType((*Probe)(nil), "proto.Probe")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xdf, 0x8f, 0xdb, 0x44,
	0x10, 0x8e, 0x1d, 0xe7, 0x87, 0x27, 0x49, 0xab, 0x5b, 0xaa, 0xca, 0x32, 0xa0, 0x46, 0x8b, 0xa8,
	0x4e, 0x45, 0x4a, 0x69, 0x5a, 0x24, 0x04, 0x2f, 0x08, 0x54, 0xe0, 0xa4, 0x5e, 0x55, 0x6d, 0xfa,
	0x5e, 0xf9, 0xec, 0x69, 0x30, 0x24, 0x5e, 0xcb, 0xbb, 0xa9, 0x1a, 0x89, 0xbf, 0x87, 0x67, 0xfe,
	0x00, 0x9e, 0xe1, 0x85, 0xbf, 0x09, 0xa1, 0x9d, 0x5d, 0x3b, 0x76, 0xee, 0x0e, 0x0e, 0x1e, 0xfa,
	0x74, 0x9e, 0x99, 0x6f, 0x6f, 0xbf, 0xf9, 0xe6, 0xdb, 0x09, 0xcc, 0x14, 0x56, 0x6f, 0xf2, 0x14,
	0x17, 0x65, 0x25, 0xb5, 0x64, 0x03, 0xfa, 0x13, 0xbf, 0xbf, 0x96, 0x72, 0xbd, 0xc1, 0x87, 0x14,
	0x5d, 0xec, 0x5e, 0x3f, 0xc4, 0x6d, 0xa9, 0xf7, 0x16, 0x13, 0xdf, 0x3b, 0x2e, 0xea, 0x7c, 0x8b,
	0x4a, 0x27, 0xdb, 0xd2, 0x02, 0xf8, 0x1f, 0x3e, 0x8c, 0xce, 0x51, 0xa9, 0x64, 0x8d, 0x8c, 0x41,
	0xf0, 0x72, 0x5f, 0x62, 0xe4, 0xcd, 0xbd, 0xd3, 0x50, 0xd0, 0x37, 0xbb, 0x07, 0xc1, 0x46, 0x26,
	0x59, 0xe4, 0xcf, 0xbd, 0xd3, 0xc9, 0x72, 0x62, 0x4f, 0x2d, 0x9e, 0xc9, 0x24, 0x13, 0x54, 0x60,
	0x1f, 0xc1, 0x50, 0x61, 0x91, 0x61, 0x15, 0xf5, 0x3b, 0x90, 0xe7, 0x32, 0x43, 0xe1, 0x4a, 0xec,
	0x14, 0x46, 0x4a, 0xef, 0xb2, 0x1c, 0x55, 0x14, 0x10, 0xea, 0x96, 0x43, 0xad, 0x6c, 0x56, 0xd4,
	0x65, 0xf6, 0x31, 0x0c, 0x4b, 0xb9, 0xc9, 0xd3, 0x7d, 0x34, 0x20, 0xe0, 0xcc, 0x01, 0x5f, 0x50,
	0x52, 0xb8, 0x22, 0x7b, 0x04, 0xa1, 0xca, 0xd7, 0x45, 0xa2, 0x77, 0x15, 0x46, 0x43, 0x42, 0xbe,
	0xe7, 0x90, 0xe7, 0x6a, 0xbd, 0xaa, 0x4b, 0xe2, 0x80, 0x62, 0x5f, 0xc0, 0x6c, 0x2d, 0x95, 0xca,
	0x4b, 0xd7, 0x6e, 0x34, 0xa2, 0x63, 0x77, 0xdc, 0xb1, 0xef, 0xda, 0x35, 0xd1, 0x85, 0x32, 0x0e,
	0x46, 0xec, 0x0b, 0x8c, 0xc6, 0x74, 0x66, 0x5a, 0x93, 0x32, 0x39, 0x61, 0x4b, 0xfc, 0x77, 0x0f,
	0x02, 0xa3, 0x8b, 0x91, 0xac, 0x90, 0x99, 0x95, 0xf1, 0x48, 0x0f, 0x2a, 0xb0, 0x0f, 0x20, 0x34,
	0x7d, 0xef, 0x9f, 0x27, 0x5b, 0x24, 0x61, 0x43, 0x71, 0x48, 0xb0, 0x18, 0xc6, 0xe7, 0x79, 0xf1,
	0x3a, 0xdf, 0xa0, 0x22, 0x49, 0x67, 0xa2, 0x89, 0xa9, 0x96, 0xbc, 0xb5, 0xb5, 0xc0, 0xd5, 0x5c,
	0x6c, 0x6a, 0x6a, 0x77, 0xf1, 0x23, 0xa6, 0x5a, 0x45, 0x83, 0x79, 0xff, 0x34, 0x14, 0x4d, 0xcc,
	0x3e, 0x81, 0xf1, 0x16, 0x75, 0x92, 0x25, 0x3a, 0x71, 0x6a, 0xdd, 0xae, 0xd5, 0x72, 0x69, 0xd1,
	0x00, 0xf8, 0xcf, 0x10, 0x18, 0xb2, 0xc6, 0x0e, 0x85, 0x61, 0xe8, 0xec, 0x60, 0xbe, 0x59, 0x04,
	0xa3, 0x24, 0xcb, 0x2a, 0x54, 0xca, 0x11, 0xaf, 0x43, 0x83, 0xae, 0xe4, 0x06, 0x89, 0x72, 0x28,
	0xe8, 0x9b, 0x71, 0x98, 0xa6, 0xb2, 0xd0, 0x49, 0xaa, 0x9f, 0x6e, 0x93, 0x7c, 0x43, 0x94, 0x43,
	0xd1, 0xc9, 0xb1, 0x5b, 0xe0, 0xe7, 0x19, 0x0d, 0x7b, 0x2a, 0xfc, 0x3c, 0xe3, 0xbf, 0x79, 0x30,
	0x20, 0x31, 0xae, 0xbc, 0xbf, 0xd6, 0xd6, 0xbf, 0x4e, 0xdb, 0x07, 0x70, 0x52, 0x61, 0xfa, 0xca,
	0x5d, 0xf1, 0x0a, 0xe9, 0x5e, 0xcb, 0xe9, 0x76, 0x85, 0xe9, 0x37, 0xed, 0xab, 0xdb, 0xaa, 0x04,
	0xff, 0xa2, 0xca, 0x0d, 0x8d, 0xc9, 0x1f, 0xc1, 0xc8, 0x79, 0x9a, 0xdd, 0x3f, 0x98, 0xde, 0x9b,
	0xf7, 0x5b, 0xb6, 0xa1, 0xf6, 0x1a, 0xcb, 0xf3, 0x0f, 0x61, 0xb4, 0xb2, 0x83, 0xba, 0xaa, 0x65,
	0xfe, 0x15, 0x8c, 0x6b, 0x3a, 0x46, 0x7e, 0xd3, 0x19, 0x16, 0x9a, 0x20, 0x53, 0x51, 0x87, 0x9d,
	0xe9, 0xfb, 0xdd, 0xe9, 0x73, 0x0d, 0x43, 0xcb, 0x92, 0xdd, 0x85, 0x61, 0xae, 0xd4, 0x0e, 0x2b,
	0x77, 0x83, 0x8b, 0x8c, 0x23, 0xd5, 0xb1, 0x23, 0x55, 0xdb, 0x91, 0xc6, 0x62, 0xc4, 0xcc, 0x4a,
	0xd9, 0xc4, 0x6d, 0x46, 0x41, 0x87, 0x11, 0x7f, 0x00, 0xd3, 0xf6, 0x53, 0x64, 0x53, 0xf0, 0x2a,
	0xc7, 0xda, 0xab, 0x4c, 0x64, 0x2d, 0x34, 0x15, 0x9e, 0xe2, 0x8f, 0xe1, 0xe4, 0xfb, 0xa4, 0xc8,
	0xd4, 0x0f, 0xc9, 0x4f, 0x28, 0x50, 0x95, 0xb2, 0x50, 0x48, 0xce, 0x28, 0x1d, 0x51, 0x3f, 0x2f,
	0x9d, 0x53, 0xfc, 0xc6, 0x29, 0x7f, 0x79, 0x30, 0xeb, 0xbc, 0x5a, 0xd3, 0xde, 0xca, 0xee, 0x22,
	0xd7, 0x9e, 0x8d, 0xd8, 0x1c, 0x26, 0x0e, 0x42, 0xfb, 0xcd, 0x36, 0xd8, 0x4e, 0xb1, 0xcf, 0x21,
	0x6c, 0x36, 0xa3, 0x5b, 0x64, 0xf1, 0xc2, 0xee, 0xce, 0x45, 0xbd, 0x3b, 0x17, 0x2f, 0x6b, 0x84,
	0x38, 0x80, 0xbb, 0x9b, 0x28, 0xb8, 0xd1, 0x26, 0xfa, 0x16, 0x4e, 0x3a, 0xeb, 0xe5, 0x6b, 0x99,
	0xed, 0xe9, 0xc9, 0x4e, 0x96, 0xd1, 0x55, 0xdb, 0xc8, 0xd4, 0xc5, 0xe5, 0x23, 0xfc, 0x17, 0x0f,
	0x4e, 0x2e, 0x01, 0x8d, 0x08, 0x92, 0x06, 0x5f, 0x8b, 0x60, 0x23, 0x33, 0xa9, 0x37, 0x58, 0xa9,
	0x5c, 0x16, 0x24, 0x40, 0x20, 0xea, 0xb0, 0x65, 0xed, 0xfe, 0x3f, 0xed, 0xdc, 0x8e, 0x46, 0xc1,
	0x7f, 0xd0, 0x88, 0x7f, 0x09, 0x03, 0x5a, 0x95, 0xec, 0x0e, 0x0c, 0x64, 0x55, 0xcf, 0x67, 0x26,
	0x6c, 0x40, 0xee, 0x43, 0x65, 0xa8, 0x9c, 0xd5, 0xf3, 0x3d, 0x24, 0x96, 0x7f, 0x7a, 0xd0, 0x3f,
	0xdf, 0xbd, 0x65, 0x4f, 0x20, 0x6c, 0x3c, 0xc2, 0xda, 0x2f, 0x3f, 0xae, 0x45, 0xbb, 0x64, 0x21,
	0xde, 0x63, 0x9f, 0xb9, 0x5d, 0xfb, 0x2c, 0x57, 0x9a, 0xdd, 0xbd, 0x44, 0xf7, 0xa9, 0xf9, 0xad,
	0x8c, 0x8f, 0x7e, 0x8d, 0x78, 0x8f, 0x7d, 0x0a, 0x33, 0x3a, 0xd6, 0xbc, 0xbc, 0xce, 0xdb, 0x8d,
	0x8f, 0xf7, 0x04, 0xef, 0xb1, 0xfb, 0x30, 0x3e, 0x5b, 0x17, 0xb2, 0xc2, 0xb3, 0x17, 0x5d, 0x76,
	0xed, 0x80, 0xf7, 0x96, 0xbf, 0x7a, 0x30, 0xb1, 0xc2, 0xae, 0xb4, 0xac, 0xf0, 0xdd, 0xb6, 0xf5,
	0x04, 0xc2, 0x15, 0x6a, 0xb7, 0x0c, 0xba, 0x63, 0x8e, 0xaf, 0xf9, 0x2f, 0xbc, 0xb7, 0x94, 0xd0,
	0x17, 0x98, 0xfe, 0x4f, 0xa6, 0x4b, 0x18, 0xaf, 0x50, 0xdb, 0x8d, 0xde, 0x15, 0xf1, 0xda, 0x0b,
	0x2f, 0x86, 0x94, 0x79, 0xfc, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x6b, 0x03, 0x53, 0xf1,
	0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MuxClient is the client API for Mux service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MuxClient interface {
	Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error)
	StudyList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Studies, error)
	StudyMetadata(ctx context.Context, in *Study, opts ...grpc.CallOption) (*Metadata, error)
	IgnoreIP(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Node, error)
}

type muxClient struct {
	cc *grpc.ClientConn
}

func NewMuxClient(cc *grpc.ClientConn) MuxClient {
	return &muxClient{cc}
}

func (c *muxClient) Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error) {
	out := new(HandshakeResponse)
	err := c.cc.Invoke(ctx, "/proto.Mux/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *muxClient) StudyList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Studies, error) {
	out := new(Studies)
	err := c.cc.Invoke(ctx, "/proto.Mux/StudyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *muxClient) StudyMetadata(ctx context.Context, in *Study, opts ...grpc.CallOption) (*Metadata, error) {
	out := new(Metadata)
	err := c.cc.Invoke(ctx, "/proto.Mux/StudyMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *muxClient) IgnoreIP(ctx context.Context, in *Node, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/proto.Mux/IgnoreIP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MuxServer is the server API for Mux service.
type MuxServer interface {
	Handshake(context.Context, *Node) (*HandshakeResponse, error)
	StudyList(context.Context, *empty.Empty) (*Studies, error)
	StudyMetadata(context.Context, *Study) (*Metadata, error)
	IgnoreIP(context.Context, *Node) (*Node, error)
}

// UnimplementedMuxServer can be embedded to have forward compatible implementations.
type UnimplementedMuxServer struct {
}

func (*UnimplementedMuxServer) Handshake(ctx context.Context, req *Node) (*HandshakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handshake not implemented")
}
func (*UnimplementedMuxServer) StudyList(ctx context.Context, req *empty.Empty) (*Studies, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StudyList not implemented")
}
func (*UnimplementedMuxServer) StudyMetadata(ctx context.Context, req *Study) (*Metadata, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StudyMetadata not implemented")
}
func (*UnimplementedMuxServer) IgnoreIP(ctx context.Context, req *Node) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IgnoreIP not implemented")
}

func RegisterMuxServer(s *grpc.Server, srv MuxServer) {
	s.RegisterService(&_Mux_serviceDesc, srv)
}

func _Mux_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MuxServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mux/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MuxServer).Handshake(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mux_StudyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MuxServer).StudyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mux/StudyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MuxServer).StudyList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mux_StudyMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Study)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MuxServer).StudyMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mux/StudyMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MuxServer).StudyMetadata(ctx, req.(*Study))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mux_IgnoreIP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MuxServer).IgnoreIP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Mux/IgnoreIP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MuxServer).IgnoreIP(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mux_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Mux",
	HandlerType: (*MuxServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _Mux_Handshake_Handler,
		},
		{
			MethodName: "StudyList",
			Handler:    _Mux_StudyList_Handler,
		},
		{
			MethodName: "StudyMetadata",
			Handler:    _Mux_StudyMetadata_Handler,
		},
		{
			MethodName: "IgnoreIP",
			Handler:    _Mux_IgnoreIP_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

// PolicyStoreClient is the client API for PolicyStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PolicyStoreClient interface {
	Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error)
	StudyList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Studies, error)
	SetPolicy(ctx context.Context, in *Policy, opts ...grpc.CallOption) (*empty.Empty, error)
}

type policyStoreClient struct {
	cc *grpc.ClientConn
}

func NewPolicyStoreClient(cc *grpc.ClientConn) PolicyStoreClient {
	return &policyStoreClient{cc}
}

func (c *policyStoreClient) Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error) {
	out := new(HandshakeResponse)
	err := c.cc.Invoke(ctx, "/proto.PolicyStore/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyStoreClient) StudyList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Studies, error) {
	out := new(Studies)
	err := c.cc.Invoke(ctx, "/proto.PolicyStore/StudyList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *policyStoreClient) SetPolicy(ctx context.Context, in *Policy, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.PolicyStore/SetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PolicyStoreServer is the server API for PolicyStore service.
type PolicyStoreServer interface {
	Handshake(context.Context, *Node) (*HandshakeResponse, error)
	StudyList(context.Context, *empty.Empty) (*Studies, error)
	SetPolicy(context.Context, *Policy) (*empty.Empty, error)
}

// UnimplementedPolicyStoreServer can be embedded to have forward compatible implementations.
type UnimplementedPolicyStoreServer struct {
}

func (*UnimplementedPolicyStoreServer) Handshake(ctx context.Context, req *Node) (*HandshakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handshake not implemented")
}
func (*UnimplementedPolicyStoreServer) StudyList(ctx context.Context, req *empty.Empty) (*Studies, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StudyList not implemented")
}
func (*UnimplementedPolicyStoreServer) SetPolicy(ctx context.Context, req *Policy) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPolicy not implemented")
}

func RegisterPolicyStoreServer(s *grpc.Server, srv PolicyStoreServer) {
	s.RegisterService(&_PolicyStore_serviceDesc, srv)
}

func _PolicyStore_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyStoreServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PolicyStore/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyStoreServer).Handshake(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyStore_StudyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyStoreServer).StudyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PolicyStore/StudyList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyStoreServer).StudyList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _PolicyStore_SetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Policy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PolicyStoreServer).SetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.PolicyStore/SetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PolicyStoreServer).SetPolicy(ctx, req.(*Policy))
	}
	return interceptor(ctx, in, info, handler)
}

var _PolicyStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.PolicyStore",
	HandlerType: (*PolicyStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _PolicyStore_Handshake_Handler,
		},
		{
			MethodName: "StudyList",
			Handler:    _PolicyStore_StudyList_Handler,
		},
		{
			MethodName: "SetPolicy",
			Handler:    _PolicyStore_SetPolicy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

// RecClient is the client API for Rec service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecClient interface {
	Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error)
	SetStudy(ctx context.Context, in *Study, opts ...grpc.CallOption) (*empty.Empty, error)
}

type recClient struct {
	cc *grpc.ClientConn
}

func NewRecClient(cc *grpc.ClientConn) RecClient {
	return &recClient{cc}
}

func (c *recClient) Handshake(ctx context.Context, in *Node, opts ...grpc.CallOption) (*HandshakeResponse, error) {
	out := new(HandshakeResponse)
	err := c.cc.Invoke(ctx, "/proto.Rec/Handshake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recClient) SetStudy(ctx context.Context, in *Study, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.Rec/SetStudy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecServer is the server API for Rec service.
type RecServer interface {
	Handshake(context.Context, *Node) (*HandshakeResponse, error)
	SetStudy(context.Context, *Study) (*empty.Empty, error)
}

// UnimplementedRecServer can be embedded to have forward compatible implementations.
type UnimplementedRecServer struct {
}

func (*UnimplementedRecServer) Handshake(ctx context.Context, req *Node) (*HandshakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Handshake not implemented")
}
func (*UnimplementedRecServer) SetStudy(ctx context.Context, req *Study) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetStudy not implemented")
}

func RegisterRecServer(s *grpc.Server, srv RecServer) {
	s.RegisterService(&_Rec_serviceDesc, srv)
}

func _Rec_Handshake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecServer).Handshake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rec/Handshake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecServer).Handshake(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rec_SetStudy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Study)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecServer).SetStudy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Rec/SetStudy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecServer).SetStudy(ctx, req.(*Study))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rec_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Rec",
	HandlerType: (*RecServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Handshake",
			Handler:    _Rec_Handshake_Handler,
		},
		{
			MethodName: "SetStudy",
			Handler:    _Rec_SetStudy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
